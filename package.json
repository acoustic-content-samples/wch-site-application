{
	"name": "wch-site-application",
	"dependencies": {
		"@angular/animations": "^6.1.0",
		"@angular/common": "^6.1.0",
		"@angular/compiler": "^6.1.0",
		"@angular/core": "^6.1.0",
		"@angular/forms": "^6.1.0",
		"@angular/http": "^6.1.0",
		"@angular/platform-browser": "^6.1.0",
		"@angular/platform-browser-dynamic": "^6.1.0",
		"@angular/router": "^6.1.0",
		"@ibm-wch-sdk/ng": "6.0.498",
		"@ibm-wch-sdk/ng-api": "6.0.498",
		"@ibm-wch-sdk/ng-edit": "6.0.498",
		"@ibm-wch-sdk/utils": "6.0.498",
		"@ibm-wch/components-ng-shared-components": "^1.0.31",
		"@ibm-wch/components-ng-shared-utilities": "^1.0.23",
		"@ngx-translate/core": "^10.0.1",
		"@ngx-translate/http-loader": "^3.0.1",
		"angular-svg-icon": "^6.0.0",
		"classlist.js": "^1.1.20150312",
		"core-js": "^2.4.1",
		"dom-to-image": "^2.6.0",
		"file-saver": "^1.3.8",
		"foundation-sites": "6.4.3",
		"ng2-logger": "2.0.35",
		"rxjs": "^6.3.3",
		"rxjs-compat": "^6.3.3",
		"video.js": "^6.6.0",
		"web-animations-js": "^2.3.1",
		"zone.js": "^0.8.26"
	},
	"devDependencies": {
		"@angular-devkit/build-angular": "~0.8.0",
		"@angular/cli": "^6.2.4",
		"@angular/compiler-cli": "^6.1.0",
		"@angular/language-service": "^6.1.0",
		"@ibm-wch-sdk/cli": "6.0.498",
		"@ibm-wch-sdk/schematics-utils": "6.0.498",
		"@types/jasmine": "~2.8.3",
		"@types/jasminewd2": "~2.0.2",
		"@types/jquery": "^3.3.0",
		"@types/node": "~6.0.60",
		"babel-eslint": "^9.0.0",
		"codelyzer": "~4.2.1",
		"eslint": "^5.5.0",
		"file-regex": "^2.3.0",
		"fs-extra": "^6.0.1",
		"husky": "^1.1.2",
		"jasmine-spec-reporter": "~4.2.1",
		"karma": "~2.0.0",
		"karma-chrome-launcher": "~2.2.0",
		"karma-coverage-istanbul-reporter": "^1.2.1",
		"karma-jasmine": "~1.1.0",
		"karma-jasmine-html-reporter": "^0.2.2",
		"lint-staged": "^7.2.2",
		"node-minify": "^2.4.2",
		"prettier": "1.14.2",
		"protractor": "~5.1.2",
		"replace-in-file": "^3.4.0",
		"shelljs": "^0.7.8",
		"source-map-explorer": "^1.5.0",
		"tslint": "~5.9.1",
		"typescript": "~2.8.2",
		"wch-site-developer-tools": "latest",
		"wchtools-cli": "^3"
	},
	"license": "MIT",
	"private": true,
	"scripts": {
		"addPrefetch": "ibm-wch-sdk-cli add prefetch --script --data ./temp_data/ --src ./src/ ",
		"build": "ng build --prod  --output-hashing none --build-optimizer true",
		"build-deploy": "npm run build && npm run deploy",
		"build-deploy-code": "npm run build && npm run deploy-code",
		"build-preload": " mkdir -p -m 777 temp_data && echo Pulling the site pages. Enter the user password for your WCH tenant: && wchtools pull -A --dir temp_data && npm run addPrefetch && rm -r temp_data &&  npm run build ",
		"build-preload-windows": " mkdir temp_data && echo Pulling the site pages. Enter the user password for your WCH tenant: && wchtools pull -A --dir temp_data && npm run addPrefetch && rmdir /S /Q temp_data &&  npm run build ",
		"crawling": "node scripts/transpileForCrawling.js",
		"create-layout": "echo Pulling the content types. Enter the user password for your WCH tenant: && wchtools pull -tlm -I --dir src/wchLayouts && echo Creating the layout, layout mapping, and the angular component. && ibm-wch-sdk-cli create layout --data src/wchLayouts --src src/app --scss --flat --editable",
		"createSite": "ibm-wch-sdk-cli create site --name testpage --data ./dist/ ",
		"deploy": "wchtools push -A -f -v --publish-now --dir dist",
		"deploy-code": "wchtools push -w -f -v -I --publish-now --dir dist",
		"e2e": "protractor ./protractor.conf.js",
		"install-layouts-from-folder": "node scripts/layoutsFromFolder.js ",
		"install-layouts-from-git": "node scripts/layoutFromGit.js",
		"install-layouts-from-zip": "node scripts/layoutsFromZip.js ",
		"internal-bundle-public": "node scripts/bundle-for-public.js",
		"lint": "ng lint",
		"ng": "ng",
		"postbuild": "node copyFiles.js && npm run crawling",
		"prebuild": "node scripts/updateBuildDate.js",
		"pree2e": "webdriver-manager update --gecko false",
		"source-map-explorer": "node scripts/sourceMap.js",
		"start": "ng serve",
		"start-dev-tools": "node node_modules/wch-site-developer-tools/server/main.js",
		"test": "ng test --watch=false",
		"update-app-module": "echo Pulling the content types. Enter the user password for your WCH tenant: && wchtools pull -tlm -I --dir src/wchLayouts && echo Updating the layout settings for new components. && ibm-wch-sdk-cli register layoutcomponents --src src/app --verbose"
	},
	"version": "0.0.0",
	"lint-staged": {
		"*.{js,jsx}": [
			"prettier --write",
			"eslint --fix",
			"git add"
		],
		"*.{ts}": [
			"prettier --write",
			"tslint --fix",
			"git add"
		],
		"*.{json,css,md}": [
			"prettier --write",
			"git add"
		]
	}
}
